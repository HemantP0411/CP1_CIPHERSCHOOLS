class Solution {
public:
        vector<vector<int>> zigzagLevelOrder(TreeNode* root) {
        if (!root) return {};
        stack<TreeNode*> s1;
        stack<TreeNode*> s2;
        vector<vector<int> > result;
        vector<int> list;
        s1.push(root);
        TreeNode* node;
        while (!s1.empty() || !s2.empty()) {
            if (s2.empty()) {
                list.clear();
                while(!s1.empty()) {
                    node = s1.top();
                    s1.pop();
                    list.push_back(node->val);
                    if (node->left) s2.push(node->left);
                    if (node->right) s2.push(node->right);
                }
                result.push_back(list);
            } else { // s1 is empty
                list.clear();
                while (!s2.empty()) {
                    node = s2.top();
                    s2.pop();
                    list.push_back(node->val);
                    if (node->right) s1.push(node->right);
                    if (node->left) s1.push(node->left);
                }
                result.push_back(list);
            }
        }
        return result;
    }
};
